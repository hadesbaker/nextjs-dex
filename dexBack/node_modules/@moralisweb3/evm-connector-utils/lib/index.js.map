{"version":3,"file":"index.js","sources":["../src/events.ts","../src/EvmAbstractConnector.ts","../src/getMoralisRpcs.ts"],"sourcesContent":["// Events emitted by the connectors,\n// The InternalWeb3Provider of Moralis will listen to these\nexport enum EvmConnectorEvent {\n  CONNECT = 'connect',\n  DISCONNECT = 'disconnect',\n  CHAIN_CHANGED = 'chainChanged',\n  ACCOUNT_CHANGED = 'accountChanged',\n}\n","import EventEmitter from 'eventemitter3';\nimport { EvmConnectorEvent } from './events';\nimport {\n  EvmAddress,\n  EvmBaseConnectOptions,\n  EvmChain,\n  EvmConnection,\n  EvmProvider,\n  EvmProviderEvent,\n  ProviderAccounts,\n  ProviderChainId,\n  ProviderInfo,\n  ProviderRpcError,\n  LoggerController,\n  MoralisCore,\n  MoralisNetworkConnectorError,\n  NetworkConnectorErrorCode,\n} from '@moralisweb3/core';\n\n/**\n * Abstract connector to connect EIP-1193 providers to Moralis\n *\n * It should implement at least:\n * - createProvider()\n * - createConnection()\n * - name: a name to identify\n * - network: the network type that is used (eg. 'evm')\n */\nexport abstract class EvmAbstractConnector<\n  Provider extends EvmProvider = EvmProvider,\n  Options extends EvmBaseConnectOptions = EvmBaseConnectOptions,\n> extends EventEmitter {\n  public readonly network = 'evm';\n  protected readonly logger: LoggerController;\n\n  private _provider: Provider | null = null;\n  public get provider(): Provider | null {\n    return this._provider;\n  }\n\n  private _chain: EvmChain | null = null;\n  public get chain(): EvmChain | null {\n    return this._chain;\n  }\n\n  private _account: EvmAddress | null = null;\n  public get account(): EvmAddress | null {\n    return this._account;\n  }\n\n  public constructor(public readonly name: string, protected readonly core: MoralisCore) {\n    super();\n    this.name = name;\n    this.logger = new LoggerController(this.core.config, `evmConnector: ${this.name}`);\n\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\n    this.handleChainChanged = this.handleChainChanged.bind(this);\n    this.handleConnect = this.handleConnect.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n  }\n\n  public async connect(options?: Options): Promise<EvmConnection> {\n    const connection = await this.createConnection(options);\n    this._account = connection.account;\n    this._chain = connection.chain;\n    return connection;\n  }\n\n  /**\n   * Creates a valid EIP-1193 provider.\n   */\n  protected abstract createProvider(options?: Options): Promise<Provider>;\n\n  /**\n   * Connects the provider.\n   * Should returns an object with:\n   * - provider: A valid EIP-1193 provider\n   * - chainId(optional): the chainId that has been connected to\n   * - account(optional): the address that is connected to the provider\n   */\n  protected abstract createConnection(options?: Options): Promise<EvmConnection>;\n\n  protected async getProvider(options?: Options): Promise<Provider> {\n    if (!this._provider) {\n      this._provider = await this.createProvider(options);\n      this.subscribeToEvents(this._provider);\n    }\n    return this._provider;\n  }\n\n  private subscribeToEvents(provider: Provider) {\n    provider.on(EvmProviderEvent.CHAIN_CHANGED, this.handleChainChanged);\n    provider.on(EvmProviderEvent.ACCOUNTS_CHANGED, this.handleAccountsChanged);\n    provider.on(EvmProviderEvent.CONNECT, this.handleConnect);\n    provider.on(EvmProviderEvent.DISCONNECT, this.handleDisconnect);\n  }\n\n  // unsubscribeToEvents(provider: EvmProvider) {\n  //   provider.removeListener(EvmProviderEvent.CHAIN_CHANGED, this.handleChainChanged);\n  //   provider.removeListener(EvmProviderEvent.ACCOUNTS_CHANGED, this.handleAccountsChanged);\n  //   provider.removeListener(EvmProviderEvent.CONNECT, this.handleConnect);\n  //   provider.removeListener(EvmProviderEvent.DISCONNECT, this.handleDisconnect);\n  // }\n\n  /**\n   * Updates account and emit event, on EIP-1193 accountsChanged events\n   */\n  private handleAccountsChanged(accounts: ProviderAccounts) {\n    if (accounts.length === 0) {\n      return;\n    }\n\n    this._account = EvmAddress.create(accounts[0]);\n    this.emit(EvmConnectorEvent.ACCOUNT_CHANGED, this.account);\n  }\n\n  /**\n   * Updates chainId and emit event, on EIP-1193 accountsChanged events\n   */\n  private handleChainChanged(chain: ProviderChainId) {\n    const newChain = EvmChain.create(chain);\n    this._chain = newChain;\n    this.emit(EvmConnectorEvent.CHAIN_CHANGED, newChain);\n  }\n\n  private handleConnect(providerInfo: ProviderInfo) {\n    this.emit(EvmConnectorEvent.CONNECT, providerInfo);\n  }\n\n  private handleDisconnect(error: ProviderRpcError) {\n    this.emit(EvmConnectorEvent.DISCONNECT, error);\n  }\n\n  async cancelRequest(): Promise<void> {\n    throw new MoralisNetworkConnectorError({\n      code: NetworkConnectorErrorCode.NOT_IMPLEMENTED,\n      message: 'cancelRequest() is not implemented',\n    });\n  }\n\n  // /**\n  //  * Cleans all active listners, connections and stale references\n  //  */\n  // async deactivate() {\n  //   if (this.provider) {\n  //     this.unsubscribeToEvents(this.provider);\n  //   }\n\n  //   this.account = null;\n  //   this.chain = null;\n  //   this._provider = null;\n  // }\n}\n\nexport interface ConnectorFactory {\n  create(core: MoralisCore): EvmAbstractConnector;\n}\n","import { EvmChain, EvmChainish, MoralisNetworkConnectorError, NetworkConnectorErrorCode } from '@moralisweb3/core';\n\n/**\n * Get all MoralisRpcs, based on the provided speedyNodeKey\n */\nexport const getMoralisRpcs = (speedyNodeKey: string) => ({\n  1: `https://speedy-nodes-nyc.moralis.io/${speedyNodeKey}/eth/mainnet`,\n  3: `https://speedy-nodes-nyc.moralis.io/${speedyNodeKey}/eth/ropsten`,\n  4: `https://speedy-nodes-nyc.moralis.io/${speedyNodeKey}/eth/rinkeby`,\n  5: `https://speedy-nodes-nyc.moralis.io/${speedyNodeKey}/eth/goerli`,\n  42: `https://speedy-nodes-nyc.moralis.io/${speedyNodeKey}/eth/kovan`,\n  137: `https://speedy-nodes-nyc.moralis.io/${speedyNodeKey}/polygon/mainnet`,\n  80001: `https://speedy-nodes-nyc.moralis.io/${speedyNodeKey}/polygon/mumbai`,\n  56: `https://speedy-nodes-nyc.moralis.io/${speedyNodeKey}/bsc/mainnet`,\n  97: `https://speedy-nodes-nyc.moralis.io/${speedyNodeKey}/bsc/testnet`,\n  43114: `https://speedy-nodes-nyc.moralis.io/${speedyNodeKey}/avalanche/mainnet`,\n  43113: `https://speedy-nodes-nyc.moralis.io/${speedyNodeKey}/avalanche/testnet`,\n  250: `https://speedy-nodes-nyc.moralis.io/${speedyNodeKey}/fantom/mainnet`,\n});\n\nexport const getMoralisRpc = (speedyNodeKey: string, chain: EvmChainish) => {\n  const rpcs = getMoralisRpcs(speedyNodeKey);\n\n  const numberChainId = EvmChain.create(chain).decimal;\n  const validChainIds = Object.keys(rpcs).map((id) => +id);\n\n  if (!validChainIds.includes(numberChainId)) {\n    throw new MoralisNetworkConnectorError({\n      code: NetworkConnectorErrorCode.INVALID_ARGUMENT,\n      message: `Invalid chainId. Supported chains: ${validChainIds.join(', ')}`,\n    });\n  }\n};\n"],"names":["EvmConnectorEvent","core","LoggerController","EvmProviderEvent","EvmAddress","EvmChain","MoralisNetworkConnectorError","NetworkConnectorErrorCode","EventEmitter"],"mappings":"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"}