import { EvmAbstractConnector } from '@moralisweb3/evm-connector-utils';
import { EvmChainish, EvmConnection, EvmMetamaskConnectorConnectOptions, EvmProvider, MoralisCore } from '@moralisweb3/core';
export declare type MetamaskProvider = EvmProvider & {
    isMetaMask?: boolean;
    providers?: MetamaskProvider[];
};
export declare class EvmMetamaskConnector extends EvmAbstractConnector<MetamaskProvider, EvmMetamaskConnectorConnectOptions> {
    static readonly connectorName = "metamask";
    static create(core?: MoralisCore): EvmMetamaskConnector;
    constructor(core: MoralisCore);
    protected createProvider(options?: EvmMetamaskConnectorConnectOptions): Promise<MetamaskProvider>;
    protected createConnection(options?: EvmMetamaskConnectorConnectOptions): Promise<EvmConnection>;
    switchNetwork(providedChain: EvmChainish): Promise<void>;
    addNetwork(providedChain: EvmChainish): Promise<void>;
}
//# sourceMappingURL=EvmMetamaskConnector.d.ts.map