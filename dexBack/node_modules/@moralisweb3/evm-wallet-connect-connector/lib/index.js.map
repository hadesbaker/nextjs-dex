{"version":3,"file":"index.js","sources":["../src/EvmWalletConnectConnector.ts","../src/index.ts"],"sourcesContent":["import {\n  EvmAddress,\n  EvmChain,\n  EvmConnection,\n  EvmWalletConnectConnectorOptions,\n  MoralisNetworkConnectorError,\n  NetworkConnectorErrorCode,\n  MoralisCore,\n  MoralisCoreProvider,\n} from '@moralisweb3/core';\nimport { EvmAbstractConnector, getMoralisRpcs } from '@moralisweb3/evm-connector-utils';\nimport { WalletConnectProviderWrapper } from '@moralisweb3/wallet-connect-wrapper';\nimport { IWalletConnectProviderOptions } from '@walletconnect/types';\n\nconst WALLET_CONNECT_RPC_KEY = 'WalletConnect';\n\nconst defaultOptions: EvmWalletConnectConnectorOptions = {\n  chainId: 1,\n  newSession: false,\n};\n\n/**\n * Connector for WalletConnect v1\n */\nexport class EvmWalletConnectConnector extends EvmAbstractConnector<\n  WalletConnectProviderWrapper,\n  EvmWalletConnectConnectorOptions\n> {\n  public static readonly connectorName = 'wallet-connect';\n\n  public static create(core?: MoralisCore): EvmWalletConnectConnector {\n    return new EvmWalletConnectConnector(core || MoralisCoreProvider.getDefault());\n  }\n\n  constructor(core: MoralisCore) {\n    super(EvmWalletConnectConnector.connectorName, core);\n  }\n\n  protected async createProvider(options?: EvmWalletConnectConnectorOptions): Promise<WalletConnectProviderWrapper> {\n    const rpc = getMoralisRpcs(WALLET_CONNECT_RPC_KEY);\n    const chainId = options?.chainId ? EvmChain.create(options.chainId, this.core) : undefined;\n\n    const config: IWalletConnectProviderOptions = {\n      rpc,\n      chainId: chainId?.decimal,\n      qrcodeModalOptions: {\n        mobileLinks: options?.mobileLinks,\n      },\n    };\n\n    const provider = new WalletConnectProviderWrapper(config);\n\n    // Should not happen but in theory, but lets be safe\n    if (!provider) {\n      throw new MoralisNetworkConnectorError({\n        code: NetworkConnectorErrorCode.NO_PROVIDER,\n        message: 'Failed to create a WalletConnect provider',\n      });\n    }\n    return provider;\n  }\n\n  protected async createConnection(options?: EvmWalletConnectConnectorOptions): Promise<EvmConnection> {\n    const finalOptions = { ...defaultOptions, options };\n    this.logger.verbose('Connecting', { providedOptions: options, options: finalOptions });\n\n    // Log out of any previous sessions\n    if (finalOptions.newSession) {\n      this.cleanup();\n    }\n\n    const provider = await this.getProvider(options);\n    const accounts = await provider.enable();\n    return {\n      provider: provider,\n      chain: EvmChain.create(provider.chainId, this.core),\n      account: accounts[0] ? EvmAddress.create(accounts[0], this.core) : null,\n    };\n  }\n\n  async cancelRequest() {\n    if (this.provider) {\n      await this.provider.wc.killSession();\n    }\n    throw new MoralisNetworkConnectorError({\n      code: NetworkConnectorErrorCode.GENERIC_NETWORK_CONNECTOR_ERROR,\n      message: 'No pending request to cancel',\n    });\n  }\n\n  public cleanup() {\n    try {\n      if (window) {\n        window.localStorage.removeItem('walletconnect');\n      }\n    } catch (error) {\n      this.logger.verbose('Failed to cleanup', { error });\n    }\n  }\n\n  // async deactivate() {\n  //   if (this._provider) {\n  //     this.unsubscribeToEvents(this.provider as EvmProvider);\n\n  //     try {\n  //       await this._provider.close();\n  //     } catch {\n  //       // Do nothing\n  //     }\n  //   }\n\n  //   this._provider = null;\n  //   this.chain = null;\n  //   this.account = null;\n  // }\n}\n","import { EvmWalletConnectConnector } from './EvmWalletConnectConnector';\n\nconst create = EvmWalletConnectConnector.create;\nexport { create }; // For UMD builds.\n\nexport * from './EvmWalletConnectConnector';\nexport default EvmWalletConnectConnector;\n"],"names":["core","MoralisCoreProvider","getMoralisRpcs","EvmChain","WalletConnectProviderWrapper","MoralisNetworkConnectorError","NetworkConnectorErrorCode","EvmAddress","EvmAbstractConnector"],"mappings":"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"}